
/*

15. Dois c√≠rculos se sobrep√µem (colidem) se a soma dos seus raios √© maior que ou
igual a dist√¢ncia entre seus centros. A dist√¢ncia entre dois pontos pode ser
calculada usando o teorema de Pit√°goras (c = ‚àöùëé
2 + ùëè
2). Escreva uma fun√ß√£o
AreCirclesColliding() que recebe seis par√¢metros: a posi√ß√£o p1(x,y) e o raio r1 do
primeiro c√≠rculo e a posi√ß√£o p2(x,y) e o raio r2 do segundo c√≠rculo. Com os
par√¢metros informados, a fun√ß√£o deve retornar true caso os c√≠rculos estejam
sobrepostos ou false caso contr√°rio.

*/

#include <iostream>
#include <math.h>

using namespace std;

bool AreCirclesColliding(int* a, int* b, int* r)
{
    int side1 = a[1] - a[0];
    int side2 = b[1] - b[0];
    int distance = sqrt(pow(side1, 2) + pow(side2, 2));

    if((r[0] + r[1]) >= distance)
        return 1;
    return 0;

}

int main(void)
{

    int  a[2], b[2], r[2];

    for (int i = 0; i < 2; i++)
    {
        cout << "Circle number " << i+1 << "\n";
        cout << "a: ";
        cin  >> a[i];

        cout << "b: ";
        cin  >> b[i];

        cout << "Radius: ";
        cin  >> r[i];
        cout << endl;

    }

    bool collision = AreCirclesColliding(a, b, r);

    if (collision)
    {
        cout << "Circles are colliding" << "\n";
    }
    else
    {
        cout << "Circles are not colliding" << "\n";
    }

    return 0;
}
